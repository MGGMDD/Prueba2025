/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.prices.infrastructure.rest;

import com.prices.infrastructure.rest.data.BadRequestDto;
import java.time.OffsetDateTime;
import com.prices.infrastructure.rest.data.ResponsePricesInfoDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-03-31T15:52:25.041216100+02:00[Europe/Madrid]")

@Validated
@Api(value = "prices", description = "the prices API")
public interface PricesApi {

    /**
     * GET /prices : Return product price information
     * Return product price information
     *
     * @param applicationDate Application Date (format &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss&#x60;) (required)
     * @param productId Product Code (required)
     * @param brandId Brand Code (required)
     * @return Operation successfully (status code 200)
     *         or Error in the operation (status code 400)
     */
    @ApiOperation(value = "Return product price information", nickname = "pricesInfo", notes = "Return product price information", response = ResponsePricesInfoDto.class, tags={ "prices", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operation successfully", response = ResponsePricesInfoDto.class),
        @ApiResponse(code = 400, message = "Error in the operation", response = BadRequestDto.class) })
    @RequestMapping(value = "/prices",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ResponsePricesInfoDto> _pricesInfo(@NotNull @ApiParam(value = "Application Date (format `yyyy-MM-dd'T'HH:mm:ss`)", required = true) @Valid @RequestParam(value = "applicationDate", required = true) @org.springframework.format.annotation.DateTimeFormat(iso = org.springframework.format.annotation.DateTimeFormat.ISO.DATE_TIME) java.time.LocalDateTime applicationDate,@NotNull @ApiParam(value = "Product Code", required = true) @Valid @RequestParam(value = "productId", required = true) Integer productId,@NotNull @ApiParam(value = "Brand Code", required = true) @Valid @RequestParam(value = "brandId", required = true) Integer brandId);

}
